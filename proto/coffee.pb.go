// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.0
// source: proto/coffee.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Coffee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area         string `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	ArrivalDate  string `protobuf:"bytes,2,opt,name=arrival_date,json=arrivalDate,proto3" json:"arrival_date,omitempty"`
	ArrivalMonth int32  `protobuf:"varint,3,opt,name=arrival_month,json=arrivalMonth,proto3" json:"arrival_month,omitempty"`
	Country      string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	New          bool   `protobuf:"varint,5,opt,name=new,proto3" json:"new,omitempty"`
	Roast        string `protobuf:"bytes,6,opt,name=roast,proto3" json:"roast,omitempty"`
	RoastText    string `protobuf:"bytes,7,opt,name=roast_text,json=roastText,proto3" json:"roast_text,omitempty"`
	Shop         string `protobuf:"bytes,8,opt,name=shop,proto3" json:"shop,omitempty"`
	Taste        string `protobuf:"bytes,9,opt,name=taste,proto3" json:"taste,omitempty"`
	Url          string `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Coffee) Reset() {
	*x = Coffee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coffee_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coffee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coffee) ProtoMessage() {}

func (x *Coffee) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coffee_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coffee.ProtoReflect.Descriptor instead.
func (*Coffee) Descriptor() ([]byte, []int) {
	return file_proto_coffee_proto_rawDescGZIP(), []int{0}
}

func (x *Coffee) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *Coffee) GetArrivalDate() string {
	if x != nil {
		return x.ArrivalDate
	}
	return ""
}

func (x *Coffee) GetArrivalMonth() int32 {
	if x != nil {
		return x.ArrivalMonth
	}
	return 0
}

func (x *Coffee) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Coffee) GetNew() bool {
	if x != nil {
		return x.New
	}
	return false
}

func (x *Coffee) GetRoast() string {
	if x != nil {
		return x.Roast
	}
	return ""
}

func (x *Coffee) GetRoastText() string {
	if x != nil {
		return x.RoastText
	}
	return ""
}

func (x *Coffee) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *Coffee) GetTaste() string {
	if x != nil {
		return x.Taste
	}
	return ""
}

func (x *Coffee) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetCoffeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoffeeId string `protobuf:"bytes,1,opt,name=coffee_id,json=coffeeId,proto3" json:"coffee_id,omitempty"`
}

func (x *GetCoffeeRequest) Reset() {
	*x = GetCoffeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coffee_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoffeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoffeeRequest) ProtoMessage() {}

func (x *GetCoffeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coffee_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoffeeRequest.ProtoReflect.Descriptor instead.
func (*GetCoffeeRequest) Descriptor() ([]byte, []int) {
	return file_proto_coffee_proto_rawDescGZIP(), []int{1}
}

func (x *GetCoffeeRequest) GetCoffeeId() string {
	if x != nil {
		return x.CoffeeId
	}
	return ""
}

type GetCoffeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetCoffeeResponse) Reset() {
	*x = GetCoffeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coffee_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoffeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoffeeResponse) ProtoMessage() {}

func (x *GetCoffeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coffee_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoffeeResponse.ProtoReflect.Descriptor instead.
func (*GetCoffeeResponse) Descriptor() ([]byte, []int) {
	return file_proto_coffee_proto_rawDescGZIP(), []int{2}
}

func (x *GetCoffeeResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetCoffeesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCoffeesRequest) Reset() {
	*x = GetCoffeesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coffee_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoffeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoffeesRequest) ProtoMessage() {}

func (x *GetCoffeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coffee_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoffeesRequest.ProtoReflect.Descriptor instead.
func (*GetCoffeesRequest) Descriptor() ([]byte, []int) {
	return file_proto_coffee_proto_rawDescGZIP(), []int{3}
}

type GetCoffeesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coffees []*Coffee `protobuf:"bytes,1,rep,name=coffees,proto3" json:"coffees,omitempty"`
}

func (x *GetCoffeesResponse) Reset() {
	*x = GetCoffeesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_coffee_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoffeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoffeesResponse) ProtoMessage() {}

func (x *GetCoffeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_coffee_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoffeesResponse.ProtoReflect.Descriptor instead.
func (*GetCoffeesResponse) Descriptor() ([]byte, []int) {
	return file_proto_coffee_proto_rawDescGZIP(), []int{4}
}

func (x *GetCoffeesResponse) GetCoffees() []*Coffee {
	if x != nil {
		return x.Coffees
	}
	return nil
}

var File_proto_coffee_proto protoreflect.FileDescriptor

var file_proto_coffee_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x81, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65,
	0x61, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x72, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x6e, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x6f, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x6f, 0x61, 0x73, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68,
	0x6f, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x61, 0x73, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x61, 0x73, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x66,
	0x66, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x66, 0x66, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x66, 0x66, 0x65, 0x65, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x66, 0x66, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x66, 0x66,
	0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x63,
	0x6f, 0x66, 0x66, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x43,
	0x6f, 0x66, 0x66, 0x65, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x73, 0x32, 0x91,
	0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x34,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x12, 0x11, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x66, 0x66, 0x65,
	0x65, 0x73, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x66, 0x66,
	0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6f, 0x66, 0x66, 0x65,
	0x65, 0x73, 0x42, 0x07, 0x5a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_coffee_proto_rawDescOnce sync.Once
	file_proto_coffee_proto_rawDescData = file_proto_coffee_proto_rawDesc
)

func file_proto_coffee_proto_rawDescGZIP() []byte {
	file_proto_coffee_proto_rawDescOnce.Do(func() {
		file_proto_coffee_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_coffee_proto_rawDescData)
	})
	return file_proto_coffee_proto_rawDescData
}

var file_proto_coffee_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_coffee_proto_goTypes = []interface{}{
	(*Coffee)(nil),             // 0: Coffee
	(*GetCoffeeRequest)(nil),   // 1: GetCoffeeRequest
	(*GetCoffeeResponse)(nil),  // 2: GetCoffeeResponse
	(*GetCoffeesRequest)(nil),  // 3: GetCoffeesRequest
	(*GetCoffeesResponse)(nil), // 4: GetCoffeesResponse
}
var file_proto_coffee_proto_depIdxs = []int32{
	0, // 0: GetCoffeesResponse.coffees:type_name -> Coffee
	1, // 1: CoffeeProto.GetCoffee:input_type -> GetCoffeeRequest
	3, // 2: CoffeeProto.GetCoffees:input_type -> GetCoffeesRequest
	2, // 3: CoffeeProto.GetCoffee:output_type -> GetCoffeeResponse
	4, // 4: CoffeeProto.GetCoffees:output_type -> GetCoffeesResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_coffee_proto_init() }
func file_proto_coffee_proto_init() {
	if File_proto_coffee_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_coffee_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coffee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coffee_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoffeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coffee_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoffeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coffee_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoffeesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_coffee_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoffeesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_coffee_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_coffee_proto_goTypes,
		DependencyIndexes: file_proto_coffee_proto_depIdxs,
		MessageInfos:      file_proto_coffee_proto_msgTypes,
	}.Build()
	File_proto_coffee_proto = out.File
	file_proto_coffee_proto_rawDesc = nil
	file_proto_coffee_proto_goTypes = nil
	file_proto_coffee_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CoffeeProtoClient is the client API for CoffeeProto service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoffeeProtoClient interface {
	GetCoffee(ctx context.Context, in *GetCoffeeRequest, opts ...grpc.CallOption) (*GetCoffeeResponse, error)
	GetCoffees(ctx context.Context, in *GetCoffeesRequest, opts ...grpc.CallOption) (*GetCoffeesResponse, error)
}

type coffeeProtoClient struct {
	cc grpc.ClientConnInterface
}

func NewCoffeeProtoClient(cc grpc.ClientConnInterface) CoffeeProtoClient {
	return &coffeeProtoClient{cc}
}

func (c *coffeeProtoClient) GetCoffee(ctx context.Context, in *GetCoffeeRequest, opts ...grpc.CallOption) (*GetCoffeeResponse, error) {
	out := new(GetCoffeeResponse)
	err := c.cc.Invoke(ctx, "/CoffeeProto/GetCoffee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coffeeProtoClient) GetCoffees(ctx context.Context, in *GetCoffeesRequest, opts ...grpc.CallOption) (*GetCoffeesResponse, error) {
	out := new(GetCoffeesResponse)
	err := c.cc.Invoke(ctx, "/CoffeeProto/GetCoffees", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoffeeProtoServer is the server API for CoffeeProto service.
type CoffeeProtoServer interface {
	GetCoffee(context.Context, *GetCoffeeRequest) (*GetCoffeeResponse, error)
	GetCoffees(context.Context, *GetCoffeesRequest) (*GetCoffeesResponse, error)
}

// UnimplementedCoffeeProtoServer can be embedded to have forward compatible implementations.
type UnimplementedCoffeeProtoServer struct {
}

func (*UnimplementedCoffeeProtoServer) GetCoffee(context.Context, *GetCoffeeRequest) (*GetCoffeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCoffee not implemented")
}
func (*UnimplementedCoffeeProtoServer) GetCoffees(context.Context, *GetCoffeesRequest) (*GetCoffeesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCoffees not implemented")
}

func RegisterCoffeeProtoServer(s *grpc.Server, srv CoffeeProtoServer) {
	s.RegisterService(&_CoffeeProto_serviceDesc, srv)
}

func _CoffeeProto_GetCoffee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCoffeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoffeeProtoServer).GetCoffee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CoffeeProto/GetCoffee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoffeeProtoServer).GetCoffee(ctx, req.(*GetCoffeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoffeeProto_GetCoffees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCoffeesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoffeeProtoServer).GetCoffees(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CoffeeProto/GetCoffees",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoffeeProtoServer).GetCoffees(ctx, req.(*GetCoffeesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoffeeProto_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CoffeeProto",
	HandlerType: (*CoffeeProtoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCoffee",
			Handler:    _CoffeeProto_GetCoffee_Handler,
		},
		{
			MethodName: "GetCoffees",
			Handler:    _CoffeeProto_GetCoffees_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/coffee.proto",
}
